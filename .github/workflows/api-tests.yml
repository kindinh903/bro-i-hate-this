name: Run Postman API Tests 📦

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency: 
  group: api-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  postman-tests: 
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout ⚙️
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Newman (Postman CLI)
        run: npm install -g newman

      - name: Run Messages API tests 📧
        run: |
          newman run postman/collections/Messages_Clean.postman_collection.json \
            --iteration-data postman/data/messages_clean_cases.csv \
            --env-var baseUrl=https://api-with-bugs.practicesoftwaretesting.com \
            --reporters cli,json \
            --reporter-json-export messages-results.json || echo "Messages API tests failed" >> failed_tests.txt

      - name: Run Payment Check tests 💳
        run: |
          newman run postman/collections/payment_check_collection.json \
            --iteration-data postman/data/payment_check_cases.csv \
            --env-var baseUrl=https://api-with-bugs.practicesoftwaretesting.com \
            --reporters cli,json \
            --reporter-json-export payment-results.json || echo "Payment Check tests failed" >> failed_tests.txt

      - name: Run Reply Message tests 💬
        run: |
          newman run postman/collections/reply_message.json \
            --iteration-data postman/data/reply_message.csv \
            --env-var baseUrl=https://api-with-bugs.practicesoftwaretesting.com \
            --reporters cli,json \
            --reporter-json-export reply-results.json || echo "Reply Message tests failed" >> failed_tests.txt

      - name: Check overall result ✅/❌
        run: |
          if [ -f failed_tests.txt ]; then
            echo "❌ Some Postman test suites failed:"
            cat failed_tests.txt
            echo ""
            echo "📊 Test Results Summary:"
            
            # Show summary for each test suite if results exist
            if [ -f messages-results.json ]; then
              echo "Messages API Tests:"
              node -e "
                const results = JSON.parse(require('fs').readFileSync('messages-results.json', 'utf8'));
                const stats = results.run.stats;
                console.log(\`  ✓ Passed: \${stats.assertions.passed}\`);
                console.log(\`  ✗ Failed: \${stats.assertions.failed}\`);
              "
            fi
            
            if [ -f payment-results.json ]; then
              echo "Payment Check Tests:"
              node -e "
                const results = JSON.parse(require('fs').readFileSync('payment-results.json', 'utf8'));
                const stats = results.run.stats;
                console.log(\`  ✓ Passed: \${stats.assertions.passed}\`);
                console.log(\`  ✗ Failed: \${stats.assertions.failed}\`);
              "
            fi
            
            if [ -f reply-results.json ]; then
              echo "Reply Message Tests:"
              node -e "
                const results = JSON.parse(require('fs').readFileSync('reply-results.json', 'utf8'));
                const stats = results.run.stats;
                console.log(\`  ✓ Passed: \${stats.assertions.passed}\`);
                console.log(\`  ✗ Failed: \${stats.assertions.failed}\`);
              "
            fi
            
            exit 1
          else
            echo "✅ All Postman test suites passed!"
            
            echo ""
            echo "📊 Test Results Summary:"
            
            # Show summary for successful tests
            if [ -f messages-results.json ]; then
              echo "Messages API Tests:"
              node -e "
                const results = JSON.parse(require('fs').readFileSync('messages-results.json', 'utf8'));
                const stats = results.run.stats;
                console.log(\`  ✓ Total Assertions: \${stats.assertions.total}\`);
                console.log(\`  ✓ All Passed: \${stats.assertions.passed}\`);
              "
            fi
            
            if [ -f payment-results.json ]; then
              echo "Payment Check Tests:"
              node -e "
                const results = JSON.parse(require('fs').readFileSync('payment-results.json', 'utf8'));
                const stats = results.run.stats;
                console.log(\`  ✓ Total Assertions: \${stats.assertions.total}\`);
                console.log(\`  ✓ All Passed: \${stats.assertions.passed}\`);
              "
            fi
            
            if [ -f reply-results.json ]; then
              echo "Reply Message Tests:"
              node -e "
                const results = JSON.parse(require('fs').readFileSync('reply-results.json', 'utf8'));
                const stats = results.run.stats;
                console.log(\`  ✓ Total Assertions: \${stats.assertions.total}\`);
                console.log(\`  ✓ All Passed: \${stats.assertions.passed}\`);
              "
            fi
          fi

      - name: Upload test results 📤
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newman-results
          path: |
            *-results.json
            failed_tests.txt
          retention-days: 30