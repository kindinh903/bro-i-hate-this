name: API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Cháº¡y hÃ ng ngÃ y lÃºc 8:00 UTC (3:00 PM VN time)
    - cron: '0 8 * * *'
  workflow_dispatch: # Cho phÃ©p cháº¡y manual

jobs:
  api-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Newman
      run: |
        npm install -g newman
        npm install -g newman-reporter-htmlextra

    - name: Wait for API to be ready
      run: |
        echo "Waiting for API to be available..."
        for i in {1..30}; do
          if curl -s -o /dev/null -w "%{http_code}" https://api-with-bugs.practicesoftwaretesting.com/health | grep -q "200\|404"; then
            echo "API is responding"
            break
          fi
          echo "Attempt $i: API not ready, waiting 10 seconds..."
          sleep 10
        done

    - name: Run Payment Check Tests
      run: |
        newman run postman/collections/payment-check-collection.json \
          -d postman/data/payment_check_cases.csv \
          -r cli,htmlextra \
          --reporter-htmlextra-export reports/payment-check-report.html \
          --reporter-htmlextra-title "Payment Check API Tests" \
          --color on \
          --disable-unicode
      continue-on-error: true

    - name: Run Messages Reply Tests  
      run: |
        newman run postman/collections/messages-reply-collection.json \
          -d postman/data/reply_testcases.csv \
          -r cli,htmlextra \
          --reporter-htmlextra-export reports/messages-reply-report.html \
          --reporter-htmlextra-title "Messages Reply API Tests" \
          --color on \
          --disable-unicode
      continue-on-error: true

    - name: Create reports directory
      run: mkdir -p reports
      
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: reports/
        retention-days: 30

    - name: Upload test results summary
      uses: actions/upload-artifact@v4
      if: always() 
      with:
        name: newman-results
        path: newman/
        retention-days: 7

    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Táº¡o comment summary cho PR
          let comment = '## ðŸ§ª API Test Results\n\n';
          comment += '| Test Suite | Status |\n';
          comment += '|------------|--------|\n';
          comment += '| Payment Check Tests | âœ… Completed |\n';  
          comment += '| Messages Reply Tests | âœ… Completed |\n\n';
          comment += 'ðŸ“Š Detailed reports are available in the Actions artifacts.\n';
          comment += 'ðŸ”— [View full test results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Notify on Slack (Optional)
      if: failure()
      run: |
        echo "Tests failed! You can add Slack notification here if needed."
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"API Tests failed in repository ${{ github.repository }}"}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }}